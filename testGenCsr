#!/usr/bin/env python

from certificateauthority import *
import certificateauthority
import sys

def printf(format,*args): sys.stdout.write(format%args)
def fprintf(fp,format,*args): fp.write(format%args)

def chop(line_in):
    return line_in.replace("\r","").replace("\n","")

ca = CertificateAuthority()



printf("Enter filebase to store csr and key example somedomin.org\n")
fileBase = chop(sys.stdin.readline())
csr_file = fullPath(fileBase + ".csr")
key_file = fullPath(fileBase + ".key")
printf("key_file = %s\ncsr_file = %s\n",key_file,csr_file)
csr_fp = open(csr_file,"w")
key_fp = open(key_file,"w")
printf("How many bits for key generation\n")
bits = int(chop(sys.stdin.readline()))
printf("Generating %i bit key\n",bits)
key = ca.genkey(bits)

kw = {}

for (name,prompt) in nameMap:
    printf("%s:",prompt)
    kw[name] = chop(sys.stdin.readline())

printf("Will this be a CA?")
if chop(sys.stdin.readline()).lower() == "y":
    kw["ca"]=True

csr = ca.gencsr(key,**kw)

key_fp.write(key.as_pem(cipher=None))
csr_fp.write(csr.as_pem())
key_fp.close()
csr_fp.close()


